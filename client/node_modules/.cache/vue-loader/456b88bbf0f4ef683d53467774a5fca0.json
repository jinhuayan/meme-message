{"remainingRequest":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/src/views/Home.vue","mtime":1554866661357},{"path":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jessica/Documents/learn_vue/full_stack_massage_board/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"home\" },\n    [\n      _c(\"br\"),\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-warning\",\n          on: {\n            click: function($event) {\n              _vm.showMessageForm = !_vm.showMessageForm\n            }\n          }\n        },\n        [_vm._v(\"Show from\")]\n      ),\n      _c(\"br\"),\n      _c(\"hr\"),\n      _vm.showMessageForm\n        ? _c(\n            \"form\",\n            {\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.addMessage($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", [\n                _c(\"label\", { attrs: { for: \"username\" } }, [\n                  _vm._v(\"Username\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.message.username,\n                      expression: \"message.username\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    id: \"username\",\n                    placeholder: \"Enter Username\"\n                  },\n                  domProps: { value: _vm.message.username },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.message, \"username\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"subject\" } }, [_vm._v(\"Subject\")]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.message.subject,\n                      expression: \"message.subject\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    id: \"subject\",\n                    placeholder: \"Enter a subject\",\n                    required: \"\"\n                  },\n                  domProps: { value: _vm.message.subject },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.message, \"subject\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"message\" } }, [_vm._v(\"Message\")]),\n                _c(\"textarea\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.message.message,\n                      expression: \"message.message\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: { id: \"message\", rows: \"3\" },\n                  domProps: { value: _vm.message.message },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.message, \"message\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"imgURL\" } }, [\n                  _vm._v(\"image URL\")\n                ]),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.message.imgURL,\n                      expression: \"message.imgURL\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"url\",\n                    id: \"imgURL\",\n                    placeholder: \"Enter Meme image url\",\n                    required: \"\"\n                  },\n                  domProps: { value: _vm.message.imgURL },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.message, \"imgURL\", $event.target.value)\n                    }\n                  }\n                })\n              ]),\n              _c(\n                \"button\",\n                { staticClass: \"btn btn-secondary\", attrs: { type: \"submit\" } },\n                [_vm._v(\"Add your Meme\")]\n              )\n            ]\n          )\n        : _vm._e(),\n      _c(\"br\"),\n      _vm._l(_vm.reversedMessages, function(message) {\n        return _c(\"ul\", { key: message._id, staticClass: \"list-unstyled\" }, [\n          _c(\"li\", { staticClass: \"media\" }, [\n            message.imgURL\n              ? _c(\"img\", {\n                  staticClass: \"mr-3\",\n                  attrs: { src: message.imgURL, alt: message.subject }\n                })\n              : _vm._e(),\n            _c(\"div\", { staticClass: \"media-body\" }, [\n              _c(\"h5\", { staticClass: \"mt-0 mb-1\" }, [\n                _vm._v(_vm._s(message.username))\n              ]),\n              _c(\"h4\", { staticClass: \"mt-0 mb-1\" }, [\n                _vm._v(_vm._s(message.subject))\n              ]),\n              _vm._v(\"\\n        \" + _vm._s(message.message) + \"\\n        \"),\n              _c(\"br\"),\n              _c(\"small\", [_vm._v(_vm._s(message.created))])\n            ]),\n            _c(\"br\")\n          ]),\n          _c(\"hr\")\n        ])\n      })\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}